[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]


[tasks.clean]
command = "cargo"
args = ["clean"]


[tasks.get-vosk]
description = "Download Vosk dynamic library"
condition = { files_not_exist = ["vosk/models/vosk-model-en-us"] }
script_runner = "@shell"
script = '''
mkdir -p vosk/models
rm -rf vosk/models/vosk-model-en-us.zip
curl -L -o vosk/models/vosk-model-en-us.zip https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip
unzip -o vosk/models/vosk-model-en-us.zip -d vosk/models
rm -rf vosk/models/vosk-model-en-us.zip
mv vosk/models/vosk-model-small-en-us-0.15 vosk/models/vosk-model-en-us

mkdir -p vosk/lib
rm -rf vosk/lib/*
curl -L -o vosk/lib/libvosk-linux.zip https://github.com/alphacep/vosk-api/releases/download/v0.3.45/vosk-linux-x86_64-0.3.45.zip
curl -L -o vosk/lib/libvosk-win.zip https://github.com/alphacep/vosk-api/releases/download/v0.3.45/vosk-win64-0.3.45.zip
unzip -o vosk/lib/libvosk-linux.zip -d vosk/lib
unzip -o vosk/lib/libvosk-win.zip -d vosk/lib
rm -rf vosk/lib/libvosk-linux.zip
rm -rf vosk/lib/libvosk-win.zip
'''


[tasks.copy-vosk-libs]
description = "Copy Vosk dynamic library to target dirs"
dependencies = ["get-vosk"]
script_runner = "@shell"
script = '''
mkdir -p vosk
mkdir -p target/debug
mkdir -p target/release

cp vosk/lib/vosk-linux-x86_64-0.3.45/libvosk.so target/debug/
cp vosk/lib/vosk-linux-x86_64-0.3.45/libvosk.so target/release/

cp vosk/lib/vosk-win64-0.3.45/lib* target/debug/
cp vosk/lib/vosk-win64-0.3.45/lib* target/release/
'''


[tasks.build]
description = "Compile the project (debug)"
dependencies = ["copy-vosk-libs"]
condition = { files_modified = { input = ["src/**/*", "vosk/**/*", "Cargo.toml", "Config.toml"], output = ["target/debug/markitup-cli"] } }
command = "cargo"
args = ["build"]

[tasks.release]
description = "Compile the project (release)"
dependencies = ["copy-vosk-libs"]
condition = { files_modified = { input = ["src/**/*", "vosk/**/*", "Cargo.toml", "Config.toml"], output = ["target/release/markitup-cli"] } }
command = "cargo"
args = ["build", "--release"]


[tasks.run]
description = "Run the project with a specified file"
dependencies = ["build"]
script_runner = "@shell"
script = '''
if [ $# -eq 0 ]; then
    echo "Available test file types:"
    find bench/ -type f -name "*.*" | sed 's/.*\.//' | sort -u | sed 's/^/  /'
    echo ""
    echo "Usage: cargo make run <file_extension>"
else
    cargo run --bin markitup-cli -- "bench/test.$1"
fi
'''

